generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int              @id @default(autoincrement())
  name             String?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  timeZone         String?
  primaryEmail     String           @unique
  emails           Email[]
  events           Event[]
  emailPreferences EmailPreference?
  categories       Category[]
}

model Event {
  id                     Int       @id @default(autoincrement())
  name                   String
  date                   DateTime
  description            String?
  userId                 Int
  user                   User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
  category               Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  categoryId             Int?
  disableReminder        Boolean   @default(false)
  reccuring              Boolean   @default(true)
  reminderSentWeekBefore Boolean   @default(false)
  reminderSentDayBefore  Boolean   @default(false)
  reminderSentOnDay      Boolean   @default(false)
}

model EmailPreference {
  id                 Int     @id @default(autoincrement())
  userId             Int     @unique
  emailOneWeekBefore Boolean @default(false)
  emailOneDayBefore  Boolean @default(false)
  emailOnDate        Boolean @default(true)
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  events    Event[]
}

model Email {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
}
